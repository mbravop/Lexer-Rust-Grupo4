Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AS
    ASYNC
    AWAIT
    BREAK
    CONST
    CONTINUE
    CRATE
    DOUBLEQUOTE
    DYN
    ELSE
    ENUM
    EXTERN
    IF
    IMPL
    LOOP
    MATCH
    MODULE
    MOVE
    PRINT
    PUB
    RETURN
    SINGLEQUOTE
    STATIC
    STRUCT
    SUPER
    Self
    TRAIT
    TYPE
    UNSAFE
    USE
    WHERE
    self

Grammar

Rule 0     S' -> funcion
Rule 1     funcion -> FN ID LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET
Rule 2     codigo -> expresionAritmetica masCodigo
Rule 3     codigo -> impresion masCodigo
Rule 4     codigo -> condiciones masCodigo
Rule 5     codigo -> asignacion masCodigo
Rule 6     codigo -> estrFor
Rule 7     codigo -> estrWhile
Rule 8     codigo -> input masCodigo
Rule 9     masCodigo -> SEMICOLON
Rule 10    masCodigo -> SEMICOLON codigo
Rule 11    expresionAritmetica -> valor operador valor
Rule 12    expresionAritmetica -> valor operador expresionAritmetica
Rule 13    operador -> PLUS
Rule 14    operador -> MINUS
Rule 15    operador -> MULT
Rule 16    operador -> DIVIDE
Rule 17    operador -> MOD
Rule 18    valor -> INTEGER
Rule 19    valor -> FLOAT
Rule 20    valor -> ID
Rule 21    valores -> valor
Rule 22    valores -> valor COMMA valores
Rule 23    impresion -> PRINTLN NOT LPAREN valores RPAREN
Rule 24    input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
Rule 25    condicion -> valor operComp valor
Rule 26    operComp -> GREATERTHAN
Rule 27    operComp -> LESSTHAN
Rule 28    operComp -> EQUALITY
Rule 29    operComp -> DIFFERENTFROM
Rule 30    operComp -> GREATEREQUALSTHAN
Rule 31    operComp -> LESSEQUALSTHAN
Rule 32    condiciones -> condicion
Rule 33    condiciones -> condicion conector condiciones
Rule 34    condicion -> TRUE
Rule 35    condicion -> FALSE
Rule 36    conector -> AND
Rule 37    conector -> OR
Rule 38    asignacion -> LET ID ASSIGN valor
Rule 39    asignacion -> LET ID ASSIGN condiciones
Rule 40    asignacion -> LET ID ASSIGN expresionAritmetica
Rule 41    asignacion -> LET ID ASSIGN estructuras
Rule 42    estructuras -> tupla
Rule 43    estructuras -> array
Rule 44    tupla -> LPAREN valores RPAREN
Rule 45    tupla -> LPAREN RPAREN
Rule 46    array -> LBRACKET valores RBRACKET
Rule 47    array -> LBRACKET RBRACKET
Rule 48    estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
Rule 49    estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
Rule 50    estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
Rule 51    estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo

Terminals, with rules where they appear

AND                  : 36
AS                   : 
ASSIGN               : 38 39 40 41
ASYNC                : 
AWAIT                : 
BREAK                : 
COLON                : 24 24 24 24
COMMA                : 22
CONST                : 
CONTINUE             : 
CRATE                : 
DIFFERENTFROM        : 29
DIVIDE               : 16
DOT                  : 24
DOUBLEQUOTE          : 
DYN                  : 
ELSE                 : 
ENUM                 : 
EQUALITY             : 28
EXTERN               : 
FALSE                : 35
FLOAT                : 19
FN                   : 1
FOR                  : 50 51
GREATEREQUALSTHAN    : 30
GREATERTHAN          : 26
ID                   : 1 20 24 38 39 40 41 50 50 51 51
IF                   : 
IMPL                 : 
IN                   : 50 51
INTEGER              : 18
IO                   : 24
LBRACKET             : 46 47
LCURLYBRACKET        : 1 48 49 50 51
LESSEQUALSTHAN       : 31
LESSTHAN             : 27
LET                  : 38 39 40 41
LOOP                 : 
LPAREN               : 1 23 24 24 44 45
MATCH                : 
MINUS                : 14
MOD                  : 17
MODULE               : 
MOVE                 : 
MULT                 : 15
MUT                  : 24
NOT                  : 23
OR                   : 37
PLUS                 : 13
PRINT                : 
PRINTLN              : 23
PUB                  : 
RBRACKET             : 46 47
RCURLYBRACKET        : 1 48 49 50 51
READLINE             : 24
REF                  : 24
RETURN               : 
RPAREN               : 1 23 24 24 44 45
SEMICOLON            : 9 10
SINGLEQUOTE          : 
STATIC               : 
STD                  : 24
STDIN                : 24
STRUCT               : 
SUPER                : 
Self                 : 
TRAIT                : 
TRUE                 : 34
TYPE                 : 
UNSAFE               : 
USE                  : 
WHERE                : 
WHILE                : 48 49
error                : 
self                 : 

Nonterminals, with rules where they appear

array                : 43
asignacion           : 5
codigo               : 1 10 48 49 49 50 51 51
condicion            : 32 33
condiciones          : 4 33 39 48 49
conector             : 33
estrFor              : 6
estrWhile            : 7
estructuras          : 41
expresionAritmetica  : 2 12 40
funcion              : 0
impresion            : 3
input                : 8
masCodigo            : 2 3 4 5 8
operComp             : 25
operador             : 11 12
tupla                : 42
valor                : 11 11 12 21 22 25 25 38
valores              : 22 23 44 46

Parsing method: LALR

state 0

    (0) S' -> . funcion
    (1) funcion -> . FN ID LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET

    FN              shift and go to state 2

    funcion                        shift and go to state 1

state 1

    (0) S' -> funcion .



state 2

    (1) funcion -> FN . ID LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET

    ID              shift and go to state 3


state 3

    (1) funcion -> FN ID . LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET

    LPAREN          shift and go to state 4


state 4

    (1) funcion -> FN ID LPAREN . RPAREN LCURLYBRACKET codigo RCURLYBRACKET

    RPAREN          shift and go to state 5


state 5

    (1) funcion -> FN ID LPAREN RPAREN . LCURLYBRACKET codigo RCURLYBRACKET

    LCURLYBRACKET   shift and go to state 6


state 6

    (1) funcion -> FN ID LPAREN RPAREN LCURLYBRACKET . codigo RCURLYBRACKET
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    codigo                         shift and go to state 8
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    condiciones                    shift and go to state 11
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 7

    (20) valor -> ID .

    PLUS            reduce using rule 20 (valor -> ID .)
    MINUS           reduce using rule 20 (valor -> ID .)
    MULT            reduce using rule 20 (valor -> ID .)
    DIVIDE          reduce using rule 20 (valor -> ID .)
    MOD             reduce using rule 20 (valor -> ID .)
    GREATERTHAN     reduce using rule 20 (valor -> ID .)
    LESSTHAN        reduce using rule 20 (valor -> ID .)
    EQUALITY        reduce using rule 20 (valor -> ID .)
    DIFFERENTFROM   reduce using rule 20 (valor -> ID .)
    GREATEREQUALSTHAN reduce using rule 20 (valor -> ID .)
    LESSEQUALSTHAN  reduce using rule 20 (valor -> ID .)
    SEMICOLON       reduce using rule 20 (valor -> ID .)
    AND             reduce using rule 20 (valor -> ID .)
    OR              reduce using rule 20 (valor -> ID .)
    LCURLYBRACKET   reduce using rule 20 (valor -> ID .)
    COMMA           reduce using rule 20 (valor -> ID .)
    RPAREN          reduce using rule 20 (valor -> ID .)
    RBRACKET        reduce using rule 20 (valor -> ID .)


state 8

    (1) funcion -> FN ID LPAREN RPAREN LCURLYBRACKET codigo . RCURLYBRACKET

    RCURLYBRACKET   shift and go to state 27


state 9

    (2) codigo -> expresionAritmetica . masCodigo
    (9) masCodigo -> . SEMICOLON
    (10) masCodigo -> . SEMICOLON codigo

    SEMICOLON       shift and go to state 29

    masCodigo                      shift and go to state 28

state 10

    (3) codigo -> impresion . masCodigo
    (9) masCodigo -> . SEMICOLON
    (10) masCodigo -> . SEMICOLON codigo

    SEMICOLON       shift and go to state 29

    masCodigo                      shift and go to state 30

state 11

    (4) codigo -> condiciones . masCodigo
    (9) masCodigo -> . SEMICOLON
    (10) masCodigo -> . SEMICOLON codigo

    SEMICOLON       shift and go to state 29

    masCodigo                      shift and go to state 31

state 12

    (5) codigo -> asignacion . masCodigo
    (9) masCodigo -> . SEMICOLON
    (10) masCodigo -> . SEMICOLON codigo

    SEMICOLON       shift and go to state 29

    masCodigo                      shift and go to state 32

state 13

    (6) codigo -> estrFor .

    RCURLYBRACKET   reduce using rule 6 (codigo -> estrFor .)


state 14

    (7) codigo -> estrWhile .

    RCURLYBRACKET   reduce using rule 7 (codigo -> estrWhile .)


state 15

    (8) codigo -> input . masCodigo
    (9) masCodigo -> . SEMICOLON
    (10) masCodigo -> . SEMICOLON codigo

    SEMICOLON       shift and go to state 29

    masCodigo                      shift and go to state 33

state 16

    (11) expresionAritmetica -> valor . operador valor
    (12) expresionAritmetica -> valor . operador expresionAritmetica
    (25) condicion -> valor . operComp valor
    (13) operador -> . PLUS
    (14) operador -> . MINUS
    (15) operador -> . MULT
    (16) operador -> . DIVIDE
    (17) operador -> . MOD
    (26) operComp -> . GREATERTHAN
    (27) operComp -> . LESSTHAN
    (28) operComp -> . EQUALITY
    (29) operComp -> . DIFFERENTFROM
    (30) operComp -> . GREATEREQUALSTHAN
    (31) operComp -> . LESSEQUALSTHAN

    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULT            shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    EQUALITY        shift and go to state 43
    DIFFERENTFROM   shift and go to state 44
    GREATEREQUALSTHAN shift and go to state 45
    LESSEQUALSTHAN  shift and go to state 46

    operador                       shift and go to state 34
    operComp                       shift and go to state 35

state 17

    (23) impresion -> PRINTLN . NOT LPAREN valores RPAREN

    NOT             shift and go to state 47


state 18

    (32) condiciones -> condicion .
    (33) condiciones -> condicion . conector condiciones
    (36) conector -> . AND
    (37) conector -> . OR

    SEMICOLON       reduce using rule 32 (condiciones -> condicion .)
    LCURLYBRACKET   reduce using rule 32 (condiciones -> condicion .)
    AND             shift and go to state 49
    OR              shift and go to state 50

    conector                       shift and go to state 48

state 19

    (38) asignacion -> LET . ID ASSIGN valor
    (39) asignacion -> LET . ID ASSIGN condiciones
    (40) asignacion -> LET . ID ASSIGN expresionAritmetica
    (41) asignacion -> LET . ID ASSIGN estructuras

    ID              shift and go to state 51


state 20

    (50) estrFor -> FOR . ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> FOR . ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo

    ID              shift and go to state 52


state 21

    (48) estrWhile -> WHILE . condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> WHILE . condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    condiciones                    shift and go to state 53
    condicion                      shift and go to state 18
    valor                          shift and go to state 54

state 22

    (24) input -> STD . COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    COLON           shift and go to state 55


state 23

    (18) valor -> INTEGER .

    PLUS            reduce using rule 18 (valor -> INTEGER .)
    MINUS           reduce using rule 18 (valor -> INTEGER .)
    MULT            reduce using rule 18 (valor -> INTEGER .)
    DIVIDE          reduce using rule 18 (valor -> INTEGER .)
    MOD             reduce using rule 18 (valor -> INTEGER .)
    GREATERTHAN     reduce using rule 18 (valor -> INTEGER .)
    LESSTHAN        reduce using rule 18 (valor -> INTEGER .)
    EQUALITY        reduce using rule 18 (valor -> INTEGER .)
    DIFFERENTFROM   reduce using rule 18 (valor -> INTEGER .)
    GREATEREQUALSTHAN reduce using rule 18 (valor -> INTEGER .)
    LESSEQUALSTHAN  reduce using rule 18 (valor -> INTEGER .)
    SEMICOLON       reduce using rule 18 (valor -> INTEGER .)
    AND             reduce using rule 18 (valor -> INTEGER .)
    OR              reduce using rule 18 (valor -> INTEGER .)
    LCURLYBRACKET   reduce using rule 18 (valor -> INTEGER .)
    COMMA           reduce using rule 18 (valor -> INTEGER .)
    RPAREN          reduce using rule 18 (valor -> INTEGER .)
    RBRACKET        reduce using rule 18 (valor -> INTEGER .)


state 24

    (19) valor -> FLOAT .

    PLUS            reduce using rule 19 (valor -> FLOAT .)
    MINUS           reduce using rule 19 (valor -> FLOAT .)
    MULT            reduce using rule 19 (valor -> FLOAT .)
    DIVIDE          reduce using rule 19 (valor -> FLOAT .)
    MOD             reduce using rule 19 (valor -> FLOAT .)
    GREATERTHAN     reduce using rule 19 (valor -> FLOAT .)
    LESSTHAN        reduce using rule 19 (valor -> FLOAT .)
    EQUALITY        reduce using rule 19 (valor -> FLOAT .)
    DIFFERENTFROM   reduce using rule 19 (valor -> FLOAT .)
    GREATEREQUALSTHAN reduce using rule 19 (valor -> FLOAT .)
    LESSEQUALSTHAN  reduce using rule 19 (valor -> FLOAT .)
    SEMICOLON       reduce using rule 19 (valor -> FLOAT .)
    AND             reduce using rule 19 (valor -> FLOAT .)
    OR              reduce using rule 19 (valor -> FLOAT .)
    LCURLYBRACKET   reduce using rule 19 (valor -> FLOAT .)
    COMMA           reduce using rule 19 (valor -> FLOAT .)
    RPAREN          reduce using rule 19 (valor -> FLOAT .)
    RBRACKET        reduce using rule 19 (valor -> FLOAT .)


state 25

    (34) condicion -> TRUE .

    AND             reduce using rule 34 (condicion -> TRUE .)
    OR              reduce using rule 34 (condicion -> TRUE .)
    SEMICOLON       reduce using rule 34 (condicion -> TRUE .)
    LCURLYBRACKET   reduce using rule 34 (condicion -> TRUE .)


state 26

    (35) condicion -> FALSE .

    AND             reduce using rule 35 (condicion -> FALSE .)
    OR              reduce using rule 35 (condicion -> FALSE .)
    SEMICOLON       reduce using rule 35 (condicion -> FALSE .)
    LCURLYBRACKET   reduce using rule 35 (condicion -> FALSE .)


state 27

    (1) funcion -> FN ID LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET .

    $end            reduce using rule 1 (funcion -> FN ID LPAREN RPAREN LCURLYBRACKET codigo RCURLYBRACKET .)


state 28

    (2) codigo -> expresionAritmetica masCodigo .

    RCURLYBRACKET   reduce using rule 2 (codigo -> expresionAritmetica masCodigo .)


state 29

    (9) masCodigo -> SEMICOLON .
    (10) masCodigo -> SEMICOLON . codigo
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    RCURLYBRACKET   reduce using rule 9 (masCodigo -> SEMICOLON .)
    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    codigo                         shift and go to state 56
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    condiciones                    shift and go to state 11
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 30

    (3) codigo -> impresion masCodigo .

    RCURLYBRACKET   reduce using rule 3 (codigo -> impresion masCodigo .)


state 31

    (4) codigo -> condiciones masCodigo .

    RCURLYBRACKET   reduce using rule 4 (codigo -> condiciones masCodigo .)


state 32

    (5) codigo -> asignacion masCodigo .

    RCURLYBRACKET   reduce using rule 5 (codigo -> asignacion masCodigo .)


state 33

    (8) codigo -> input masCodigo .

    RCURLYBRACKET   reduce using rule 8 (codigo -> input masCodigo .)


state 34

    (11) expresionAritmetica -> valor operador . valor
    (12) expresionAritmetica -> valor operador . expresionAritmetica
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica

    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valor                          shift and go to state 57
    expresionAritmetica            shift and go to state 58

state 35

    (25) condicion -> valor operComp . valor
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valor                          shift and go to state 59

state 36

    (13) operador -> PLUS .

    INTEGER         reduce using rule 13 (operador -> PLUS .)
    FLOAT           reduce using rule 13 (operador -> PLUS .)
    ID              reduce using rule 13 (operador -> PLUS .)


state 37

    (14) operador -> MINUS .

    INTEGER         reduce using rule 14 (operador -> MINUS .)
    FLOAT           reduce using rule 14 (operador -> MINUS .)
    ID              reduce using rule 14 (operador -> MINUS .)


state 38

    (15) operador -> MULT .

    INTEGER         reduce using rule 15 (operador -> MULT .)
    FLOAT           reduce using rule 15 (operador -> MULT .)
    ID              reduce using rule 15 (operador -> MULT .)


state 39

    (16) operador -> DIVIDE .

    INTEGER         reduce using rule 16 (operador -> DIVIDE .)
    FLOAT           reduce using rule 16 (operador -> DIVIDE .)
    ID              reduce using rule 16 (operador -> DIVIDE .)


state 40

    (17) operador -> MOD .

    INTEGER         reduce using rule 17 (operador -> MOD .)
    FLOAT           reduce using rule 17 (operador -> MOD .)
    ID              reduce using rule 17 (operador -> MOD .)


state 41

    (26) operComp -> GREATERTHAN .

    INTEGER         reduce using rule 26 (operComp -> GREATERTHAN .)
    FLOAT           reduce using rule 26 (operComp -> GREATERTHAN .)
    ID              reduce using rule 26 (operComp -> GREATERTHAN .)


state 42

    (27) operComp -> LESSTHAN .

    INTEGER         reduce using rule 27 (operComp -> LESSTHAN .)
    FLOAT           reduce using rule 27 (operComp -> LESSTHAN .)
    ID              reduce using rule 27 (operComp -> LESSTHAN .)


state 43

    (28) operComp -> EQUALITY .

    INTEGER         reduce using rule 28 (operComp -> EQUALITY .)
    FLOAT           reduce using rule 28 (operComp -> EQUALITY .)
    ID              reduce using rule 28 (operComp -> EQUALITY .)


state 44

    (29) operComp -> DIFFERENTFROM .

    INTEGER         reduce using rule 29 (operComp -> DIFFERENTFROM .)
    FLOAT           reduce using rule 29 (operComp -> DIFFERENTFROM .)
    ID              reduce using rule 29 (operComp -> DIFFERENTFROM .)


state 45

    (30) operComp -> GREATEREQUALSTHAN .

    INTEGER         reduce using rule 30 (operComp -> GREATEREQUALSTHAN .)
    FLOAT           reduce using rule 30 (operComp -> GREATEREQUALSTHAN .)
    ID              reduce using rule 30 (operComp -> GREATEREQUALSTHAN .)


state 46

    (31) operComp -> LESSEQUALSTHAN .

    INTEGER         reduce using rule 31 (operComp -> LESSEQUALSTHAN .)
    FLOAT           reduce using rule 31 (operComp -> LESSEQUALSTHAN .)
    ID              reduce using rule 31 (operComp -> LESSEQUALSTHAN .)


state 47

    (23) impresion -> PRINTLN NOT . LPAREN valores RPAREN

    LPAREN          shift and go to state 60


state 48

    (33) condiciones -> condicion conector . condiciones
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    condicion                      shift and go to state 18
    condiciones                    shift and go to state 61
    valor                          shift and go to state 54

state 49

    (36) conector -> AND .

    TRUE            reduce using rule 36 (conector -> AND .)
    FALSE           reduce using rule 36 (conector -> AND .)
    INTEGER         reduce using rule 36 (conector -> AND .)
    FLOAT           reduce using rule 36 (conector -> AND .)
    ID              reduce using rule 36 (conector -> AND .)


state 50

    (37) conector -> OR .

    TRUE            reduce using rule 37 (conector -> OR .)
    FALSE           reduce using rule 37 (conector -> OR .)
    INTEGER         reduce using rule 37 (conector -> OR .)
    FLOAT           reduce using rule 37 (conector -> OR .)
    ID              reduce using rule 37 (conector -> OR .)


state 51

    (38) asignacion -> LET ID . ASSIGN valor
    (39) asignacion -> LET ID . ASSIGN condiciones
    (40) asignacion -> LET ID . ASSIGN expresionAritmetica
    (41) asignacion -> LET ID . ASSIGN estructuras

    ASSIGN          shift and go to state 62


state 52

    (50) estrFor -> FOR ID . IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> FOR ID . IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo

    IN              shift and go to state 63


state 53

    (48) estrWhile -> WHILE condiciones . LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> WHILE condiciones . LCURLYBRACKET codigo RCURLYBRACKET codigo

    LCURLYBRACKET   shift and go to state 64


state 54

    (25) condicion -> valor . operComp valor
    (26) operComp -> . GREATERTHAN
    (27) operComp -> . LESSTHAN
    (28) operComp -> . EQUALITY
    (29) operComp -> . DIFFERENTFROM
    (30) operComp -> . GREATEREQUALSTHAN
    (31) operComp -> . LESSEQUALSTHAN

    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    EQUALITY        shift and go to state 43
    DIFFERENTFROM   shift and go to state 44
    GREATEREQUALSTHAN shift and go to state 45
    LESSEQUALSTHAN  shift and go to state 46

    operComp                       shift and go to state 35

state 55

    (24) input -> STD COLON . COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    COLON           shift and go to state 65


state 56

    (10) masCodigo -> SEMICOLON codigo .

    RCURLYBRACKET   reduce using rule 10 (masCodigo -> SEMICOLON codigo .)


state 57

    (11) expresionAritmetica -> valor operador valor .
    (11) expresionAritmetica -> valor . operador valor
    (12) expresionAritmetica -> valor . operador expresionAritmetica
    (13) operador -> . PLUS
    (14) operador -> . MINUS
    (15) operador -> . MULT
    (16) operador -> . DIVIDE
    (17) operador -> . MOD

    SEMICOLON       reduce using rule 11 (expresionAritmetica -> valor operador valor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULT            shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40

    operador                       shift and go to state 34

state 58

    (12) expresionAritmetica -> valor operador expresionAritmetica .

    SEMICOLON       reduce using rule 12 (expresionAritmetica -> valor operador expresionAritmetica .)


state 59

    (25) condicion -> valor operComp valor .

    AND             reduce using rule 25 (condicion -> valor operComp valor .)
    OR              reduce using rule 25 (condicion -> valor operComp valor .)
    SEMICOLON       reduce using rule 25 (condicion -> valor operComp valor .)
    LCURLYBRACKET   reduce using rule 25 (condicion -> valor operComp valor .)


state 60

    (23) impresion -> PRINTLN NOT LPAREN . valores RPAREN
    (21) valores -> . valor
    (22) valores -> . valor COMMA valores
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valores                        shift and go to state 66
    valor                          shift and go to state 67

state 61

    (33) condiciones -> condicion conector condiciones .

    SEMICOLON       reduce using rule 33 (condiciones -> condicion conector condiciones .)
    LCURLYBRACKET   reduce using rule 33 (condiciones -> condicion conector condiciones .)


state 62

    (38) asignacion -> LET ID ASSIGN . valor
    (39) asignacion -> LET ID ASSIGN . condiciones
    (40) asignacion -> LET ID ASSIGN . expresionAritmetica
    (41) asignacion -> LET ID ASSIGN . estructuras
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (42) estructuras -> . tupla
    (43) estructuras -> . array
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE
    (44) tupla -> . LPAREN valores RPAREN
    (45) tupla -> . LPAREN RPAREN
    (46) array -> . LBRACKET valores RBRACKET
    (47) array -> . LBRACKET RBRACKET

    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26
    LPAREN          shift and go to state 74
    LBRACKET        shift and go to state 75

    valor                          shift and go to state 68
    condiciones                    shift and go to state 69
    expresionAritmetica            shift and go to state 70
    estructuras                    shift and go to state 71
    condicion                      shift and go to state 18
    tupla                          shift and go to state 72
    array                          shift and go to state 73

state 63

    (50) estrFor -> FOR ID IN . ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> FOR ID IN . ID LCURLYBRACKET codigo RCURLYBRACKET codigo

    ID              shift and go to state 76


state 64

    (48) estrWhile -> WHILE condiciones LCURLYBRACKET . codigo RCURLYBRACKET
    (49) estrWhile -> WHILE condiciones LCURLYBRACKET . codigo RCURLYBRACKET codigo
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones                    shift and go to state 11
    codigo                         shift and go to state 77
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 65

    (24) input -> STD COLON COLON . IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    IO              shift and go to state 78


state 66

    (23) impresion -> PRINTLN NOT LPAREN valores . RPAREN

    RPAREN          shift and go to state 79


state 67

    (21) valores -> valor .
    (22) valores -> valor . COMMA valores

    RPAREN          reduce using rule 21 (valores -> valor .)
    RBRACKET        reduce using rule 21 (valores -> valor .)
    COMMA           shift and go to state 80


state 68

    (38) asignacion -> LET ID ASSIGN valor .
    (11) expresionAritmetica -> valor . operador valor
    (12) expresionAritmetica -> valor . operador expresionAritmetica
    (25) condicion -> valor . operComp valor
    (13) operador -> . PLUS
    (14) operador -> . MINUS
    (15) operador -> . MULT
    (16) operador -> . DIVIDE
    (17) operador -> . MOD
    (26) operComp -> . GREATERTHAN
    (27) operComp -> . LESSTHAN
    (28) operComp -> . EQUALITY
    (29) operComp -> . DIFFERENTFROM
    (30) operComp -> . GREATEREQUALSTHAN
    (31) operComp -> . LESSEQUALSTHAN

    SEMICOLON       reduce using rule 38 (asignacion -> LET ID ASSIGN valor .)
    PLUS            shift and go to state 36
    MINUS           shift and go to state 37
    MULT            shift and go to state 38
    DIVIDE          shift and go to state 39
    MOD             shift and go to state 40
    GREATERTHAN     shift and go to state 41
    LESSTHAN        shift and go to state 42
    EQUALITY        shift and go to state 43
    DIFFERENTFROM   shift and go to state 44
    GREATEREQUALSTHAN shift and go to state 45
    LESSEQUALSTHAN  shift and go to state 46

    operador                       shift and go to state 34
    operComp                       shift and go to state 35

state 69

    (39) asignacion -> LET ID ASSIGN condiciones .

    SEMICOLON       reduce using rule 39 (asignacion -> LET ID ASSIGN condiciones .)


state 70

    (40) asignacion -> LET ID ASSIGN expresionAritmetica .

    SEMICOLON       reduce using rule 40 (asignacion -> LET ID ASSIGN expresionAritmetica .)


state 71

    (41) asignacion -> LET ID ASSIGN estructuras .

    SEMICOLON       reduce using rule 41 (asignacion -> LET ID ASSIGN estructuras .)


state 72

    (42) estructuras -> tupla .

    SEMICOLON       reduce using rule 42 (estructuras -> tupla .)


state 73

    (43) estructuras -> array .

    SEMICOLON       reduce using rule 43 (estructuras -> array .)


state 74

    (44) tupla -> LPAREN . valores RPAREN
    (45) tupla -> LPAREN . RPAREN
    (21) valores -> . valor
    (22) valores -> . valor COMMA valores
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    RPAREN          shift and go to state 82
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valores                        shift and go to state 81
    valor                          shift and go to state 67

state 75

    (46) array -> LBRACKET . valores RBRACKET
    (47) array -> LBRACKET . RBRACKET
    (21) valores -> . valor
    (22) valores -> . valor COMMA valores
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    RBRACKET        shift and go to state 84
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valores                        shift and go to state 83
    valor                          shift and go to state 67

state 76

    (50) estrFor -> FOR ID IN ID . LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> FOR ID IN ID . LCURLYBRACKET codigo RCURLYBRACKET codigo

    LCURLYBRACKET   shift and go to state 85


state 77

    (48) estrWhile -> WHILE condiciones LCURLYBRACKET codigo . RCURLYBRACKET
    (49) estrWhile -> WHILE condiciones LCURLYBRACKET codigo . RCURLYBRACKET codigo

    RCURLYBRACKET   shift and go to state 86


state 78

    (24) input -> STD COLON COLON IO . COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    COLON           shift and go to state 87


state 79

    (23) impresion -> PRINTLN NOT LPAREN valores RPAREN .

    SEMICOLON       reduce using rule 23 (impresion -> PRINTLN NOT LPAREN valores RPAREN .)


state 80

    (22) valores -> valor COMMA . valores
    (21) valores -> . valor
    (22) valores -> . valor COMMA valores
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID

    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7

    valor                          shift and go to state 67
    valores                        shift and go to state 88

state 81

    (44) tupla -> LPAREN valores . RPAREN

    RPAREN          shift and go to state 89


state 82

    (45) tupla -> LPAREN RPAREN .

    SEMICOLON       reduce using rule 45 (tupla -> LPAREN RPAREN .)


state 83

    (46) array -> LBRACKET valores . RBRACKET

    RBRACKET        shift and go to state 90


state 84

    (47) array -> LBRACKET RBRACKET .

    SEMICOLON       reduce using rule 47 (array -> LBRACKET RBRACKET .)


state 85

    (50) estrFor -> FOR ID IN ID LCURLYBRACKET . codigo RCURLYBRACKET
    (51) estrFor -> FOR ID IN ID LCURLYBRACKET . codigo RCURLYBRACKET codigo
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    codigo                         shift and go to state 91
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    condiciones                    shift and go to state 11
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 86

    (48) estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET .
    (49) estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET . codigo
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    RCURLYBRACKET   reduce using rule 48 (estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET .)
    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    condiciones                    shift and go to state 11
    codigo                         shift and go to state 92
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 87

    (24) input -> STD COLON COLON IO COLON . COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    COLON           shift and go to state 93


state 88

    (22) valores -> valor COMMA valores .

    RPAREN          reduce using rule 22 (valores -> valor COMMA valores .)
    RBRACKET        reduce using rule 22 (valores -> valor COMMA valores .)


state 89

    (44) tupla -> LPAREN valores RPAREN .

    SEMICOLON       reduce using rule 44 (tupla -> LPAREN valores RPAREN .)


state 90

    (46) array -> LBRACKET valores RBRACKET .

    SEMICOLON       reduce using rule 46 (array -> LBRACKET valores RBRACKET .)


state 91

    (50) estrFor -> FOR ID IN ID LCURLYBRACKET codigo . RCURLYBRACKET
    (51) estrFor -> FOR ID IN ID LCURLYBRACKET codigo . RCURLYBRACKET codigo

    RCURLYBRACKET   shift and go to state 94


state 92

    (49) estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo .

    RCURLYBRACKET   reduce using rule 49 (estrWhile -> WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo .)


state 93

    (24) input -> STD COLON COLON IO COLON COLON . STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    STDIN           shift and go to state 95


state 94

    (50) estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET .
    (51) estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET . codigo
    (2) codigo -> . expresionAritmetica masCodigo
    (3) codigo -> . impresion masCodigo
    (4) codigo -> . condiciones masCodigo
    (5) codigo -> . asignacion masCodigo
    (6) codigo -> . estrFor
    (7) codigo -> . estrWhile
    (8) codigo -> . input masCodigo
    (11) expresionAritmetica -> . valor operador valor
    (12) expresionAritmetica -> . valor operador expresionAritmetica
    (23) impresion -> . PRINTLN NOT LPAREN valores RPAREN
    (32) condiciones -> . condicion
    (33) condiciones -> . condicion conector condiciones
    (38) asignacion -> . LET ID ASSIGN valor
    (39) asignacion -> . LET ID ASSIGN condiciones
    (40) asignacion -> . LET ID ASSIGN expresionAritmetica
    (41) asignacion -> . LET ID ASSIGN estructuras
    (50) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET
    (51) estrFor -> . FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo
    (48) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET
    (49) estrWhile -> . WHILE condiciones LCURLYBRACKET codigo RCURLYBRACKET codigo
    (24) input -> . STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN
    (18) valor -> . INTEGER
    (19) valor -> . FLOAT
    (20) valor -> . ID
    (25) condicion -> . valor operComp valor
    (34) condicion -> . TRUE
    (35) condicion -> . FALSE

    RCURLYBRACKET   reduce using rule 50 (estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET .)
    PRINTLN         shift and go to state 17
    LET             shift and go to state 19
    FOR             shift and go to state 20
    WHILE           shift and go to state 21
    STD             shift and go to state 22
    INTEGER         shift and go to state 23
    FLOAT           shift and go to state 24
    ID              shift and go to state 7
    TRUE            shift and go to state 25
    FALSE           shift and go to state 26

    codigo                         shift and go to state 96
    expresionAritmetica            shift and go to state 9
    impresion                      shift and go to state 10
    condiciones                    shift and go to state 11
    asignacion                     shift and go to state 12
    estrFor                        shift and go to state 13
    estrWhile                      shift and go to state 14
    input                          shift and go to state 15
    valor                          shift and go to state 16
    condicion                      shift and go to state 18

state 95

    (24) input -> STD COLON COLON IO COLON COLON STDIN . LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    LPAREN          shift and go to state 97


state 96

    (51) estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo .

    RCURLYBRACKET   reduce using rule 51 (estrFor -> FOR ID IN ID LCURLYBRACKET codigo RCURLYBRACKET codigo .)


state 97

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN . RPAREN DOT READLINE LPAREN REF MUT ID RPAREN

    RPAREN          shift and go to state 98


state 98

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN . DOT READLINE LPAREN REF MUT ID RPAREN

    DOT             shift and go to state 99


state 99

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT . READLINE LPAREN REF MUT ID RPAREN

    READLINE        shift and go to state 100


state 100

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE . LPAREN REF MUT ID RPAREN

    LPAREN          shift and go to state 101


state 101

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN . REF MUT ID RPAREN

    REF             shift and go to state 102


state 102

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF . MUT ID RPAREN

    MUT             shift and go to state 103


state 103

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT . ID RPAREN

    ID              shift and go to state 104


state 104

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID . RPAREN

    RPAREN          shift and go to state 105


state 105

    (24) input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN .

    SEMICOLON       reduce using rule 24 (input -> STD COLON COLON IO COLON COLON STDIN LPAREN RPAREN DOT READLINE LPAREN REF MUT ID RPAREN .)

